package org.PeptideClustering;

import info.debatty.spark.kmedoids.Similarity;

import java.io.Serializable;
import java.util.HashMap;

class Consts
{
    public static String alphabet = "ACDEFGHIKLMNPQRSTVWY";
}

class SubstMatrixRow extends HashMap<Character, Double>         implements Serializable
{
    public static String ExcMsg =  "wrong substitution matrix size";
    public SubstMatrixRow(double[] vals)
    {
        if (vals.length != Consts.alphabet.length()) {
            throw new RuntimeException(ExcMsg);
        }
        
        for (int i=0; i<vals.length; ++i) {
            put(Consts.alphabet.charAt(i), vals[i]);
        }
    }
}

class SubstMatrix    extends HashMap<Character, SubstMatrixRow> implements Serializable
{
    public SubstMatrix(double[][] vals)
    {
        if (vals.length != Consts.alphabet.length()) {
            throw new RuntimeException(SubstMatrixRow.ExcMsg);
        }
            
        for (int i=0; i<vals.length; ++i) {
            put(Consts.alphabet.charAt(i), new SubstMatrixRow(vals[i]));
        }
    }

    public double get(Character aa1, Character aa2)
    {
        return 0.0;
    }
}

class Blosum62 extends SubstMatrix implements Serializable
{
    static double[][] vals = new double[][] {
      {  3.9291, -0.4085, -1.7534, -0.8639, -2.2101,  0.1596, -1.6251, -1.3218, -0.7340, -1.4646, -0.9353, -1.5307, -0.8143, -0.8040, -1.4135,  1.1158, -0.0454, -0.1894, -2.5269, -1.7640},
      { -0.4085,  8.5821, -3.4600, -3.6125, -2.3755, -2.5004, -2.9878, -1.2277, -3.0363, -1.2775, -1.4198, -2.6598, -2.7952, -2.9019, -3.3892, -0.8750, -0.8667, -0.8077, -2.3041, -2.4071},
      { -1.7534, -3.4600,  5.7742,  1.5103, -3.4839, -1.3135, -1.1189, -3.1212, -0.7018, -3.6057, -3.0585,  1.2717, -1.4801, -0.3134, -1.6058, -0.2610, -1.0507, -3.1426, -4.2143, -3.0650},
      { -0.8639, -3.6125,  1.5103,  4.9028, -3.1924, -2.1102, -0.1177, -3.1944,  0.7753, -2.8465, -1.9980, -0.2680, -1.1162,  1.8546, -0.1154, -0.1469, -0.8633, -2.4423, -2.8354, -2.0205},
      { -2.2101, -2.3755, -3.4839, -3.1924,  6.0461, -3.1074, -1.2342, -0.1609, -3.0787,  0.4148,  0.0126, -2.9940, -3.5973, -3.1644, -2.7863, -2.3690, -2.1076, -0.8490,  0.9176,  2.9391},
      {  0.1596, -2.5004, -1.3135, -2.1102, -3.1074,  5.5633, -2.0409, -3.7249, -1.5280, -3.6270, -2.6766, -0.4228, -2.1335, -1.7852, -2.3041, -0.2925, -1.5754, -3.1387, -2.4915, -3.0398},
      { -1.6251, -2.9878, -1.1189, -0.1177, -1.2342, -2.0409,  7.5111, -3.2316, -0.7210, -2.7867, -1.5513,  0.5785, -2.1609,  0.4480, -0.2499, -0.8816, -1.6859, -3.1175, -2.3422,  1.6926},
      { -1.3218, -1.2277, -3.1212, -3.1944, -0.1609, -3.7249, -3.2316,  3.9985, -2.6701,  1.5216,  1.1268, -3.2170, -2.7567, -2.7696, -2.9902, -2.3482, -0.7176,  2.5470, -2.5805, -1.3314},
      { -0.7340, -3.0363, -0.7018,  0.7753, -3.0787, -1.5280, -0.7210, -2.6701,  4.5046, -2.4468, -1.3547, -0.1790, -1.0136,  1.2726,  2.1087, -0.2034, -0.6696, -2.2624, -2.9564, -1.8200},
      { -1.4646, -1.2775, -3.6057, -2.8465,  0.4148, -3.6270, -2.7867,  1.5216, -2.4468,  3.8494,  1.9918, -3.3789, -2.8601, -2.1339, -2.1546, -2.4426, -1.1975,  0.7884, -1.6319, -1.0621},
      { -0.9353, -1.4198, -3.0585, -1.9980,  0.0126, -2.6766, -1.5513,  1.1268, -1.3547,  1.9918,  5.3926, -2.1509, -2.4764, -0.4210, -1.3671, -1.4809, -0.6663,  0.6872, -1.4248, -0.9949},
      { -1.5307, -2.6598,  1.2717, -0.2680, -2.9940, -0.4228,  0.5785, -3.2170, -0.1790, -3.3789, -2.1509,  5.6532, -2.0004,  0.0017, -0.4398,  0.6009, -0.0461, -2.8763, -3.6959, -2.0818},
      { -0.8143, -2.7952, -1.4801, -1.1162, -3.5973, -2.1335, -2.1609, -2.7567, -1.0136, -2.8601, -2.4764, -2.0004,  7.3646, -1.2819, -2.1086, -0.8090, -1.0753, -2.3487, -3.6542, -2.9198},
      { -0.8040, -2.9019, -0.3134,  1.8546, -3.1644, -1.7852,  0.4480, -2.7696,  1.2726, -2.1339, -0.4210,  0.0017, -1.2819,  5.2851,  0.9828, -0.1011, -0.6753, -2.1984, -1.9465, -1.4211},
      { -1.4135, -3.3892, -1.6058, -0.1154, -2.7863, -2.3041, -0.2499, -2.9902,  2.1087, -2.1546, -1.3671, -0.4398, -2.1086,  0.9828,  5.4735, -0.7648, -1.1223, -2.5026, -2.6794, -1.6939},
      {  1.1158, -0.8750, -0.2610, -0.1469, -2.3690, -0.2925, -0.8816, -2.3482, -0.2034, -2.4426, -1.4809,  0.6009, -0.8090, -0.1011, -0.7648,  3.8844,  1.3811, -1.6462, -2.7519, -1.6858},
      { -0.0454, -0.8667, -1.0507, -0.8633, -2.1076, -1.5754, -1.6859, -0.7176, -0.6696, -1.1975, -0.6663, -0.0461, -1.0753, -0.6753, -1.1223,  1.3811,  4.5453, -0.0555, -2.4289, -1.6060},
      { -0.1894, -0.8077, -3.1426, -2.4423, -0.8490, -3.1387, -3.1175,  2.5470, -2.2624,  0.7884,  0.6872, -2.8763, -2.3487, -2.1984, -2.5026, -1.6462, -0.0555,  3.7689, -2.8343, -1.2075},
      { -2.5269, -2.3041, -4.2143, -2.8354,  0.9176, -2.4915, -2.3422, -2.5805, -2.9564, -1.6319, -1.4248, -3.6959, -3.6542, -1.9465, -2.6794, -2.7519, -2.4289, -2.8343, 10.5040,  2.1542},
      { -1.7640, -2.4071, -3.0650, -2.0205,  2.9391, -3.0398,  1.6926, -1.3314, -1.8200, -1.0621, -0.9949, -2.0818, -2.9198, -1.4211, -1.6939, -1.6858, -1.6060, -1.2075,  2.1542,  6.5950}
    };
    
    Blosum62() { super(vals); }
}

public class PeptideSimilarity implements Similarity<String> 
{
    private static String alphabetRegex = "[" + Consts.alphabet + "]+";

    public double similarity(String p1, String p2)
    {
        if (!p1.matches(alphabetRegex) || 
            !p2.matches(alphabetRegex) || 
             p1.length() != p2.length())
        {
            return 0.0;
        }
        
        double res = 0.0;

        for (int i=0; i<p1.length(); ++i)
        {
            if (p1.charAt(i) == p2.charAt(i))
            {
                res += 1.0;
            }
        }
            
        return res;
    }
}
